[project]
name = "darbiadev-sanmar"
version = "0.5.0"
description = "A wrapper for SanMar's API"
authors = [
    { name = "Bradley Reynolds", email = "bradley.reynolds@darbia.dev" },
]
license = { text = "MIT" }
readme = "README.md"
requires-python = ">=3.11,<3.13"
dynamic = ["dependencies", "optional-dependencies"]

[project.urls]
repository = "https://github.com/darbiadev/darbiadev-sanmar"
documentation = "https://docs.darbia.dev/darbiadev-sanmar/"

[build-system]
requires = ["setuptools", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools.dynamic.dependencies]
file = ["requirements/requirements.txt"]

[tool.setuptools.dynamic.optional-dependencies]
dev = { file = ["requirements/requirements-dev.txt"] }
tests = { file = ["requirements/requirements-tests.txt"] }
docs = { file = ["requirements/requirements-docs.txt"] }

[tool.ruff]
preview = true
unsafe-fixes = true
target-version = "py311"
select = ["ALL"]
line-length = 120
ignore = [
    "CPY001", # (Missing copyright notice at top of file) - No license
    "E501", # (Line too long) - FIXME -- Need to do something about the XML blocks
]

[tool.ruff.extend-per-file-ignores]
"docs/*" = [
    "INP001", # (File `tests/*.py` is part of an implicit namespace package. Add an `__init__.py`.) - Docs are not modules
]
"tests/*" = [
    "INP001", # (File `tests/*.py` is part of an implicit namespace package. Add an `__init__.py`.) - Tests are not modules
    "S101", # (Use of `assert` detected) - Yes, that's the point
]

[tool.ruff.pydocstyle]
convention = "numpy"

[tool.coverage.run]
source = [
    "darbiadev_sanmar",
]
